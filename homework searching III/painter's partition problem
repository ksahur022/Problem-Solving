import java.util.ArrayList;

public class Solution {
    public static boolean helper(ArrayList<Integer> boards, int m, int k) {
        int l= 0;
        int p= 1;
        for (int i = 0; i < boards.size(); i++) {
            if (l + boards.get(i) <= m) {
                l += boards.get(i);
            } else {
                p++;
                l = boards.get(i);
            }
        }
        return (p <= k);
    }

    public static int findLargestMinDistance(ArrayList<Integer> boards, int k) {
        int max = Integer.MIN_VALUE;
        int sum = 0;
        int n = boards.size();
        for (int i = 0; i < n; i++) {
            max = Math.max(max, boards.get(i));
            sum += boards.get(i);
        }
        int low = max;
        int high = sum;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (helper(boards, mid, k)) {
                high = mid - 1;
            } else low = mid + 1;
        }
        return low;
    }
}
