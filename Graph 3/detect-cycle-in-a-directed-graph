class Solution {
    // Function to detect cycle in a directed graph.
    public boolean isCyclic(int v, ArrayList<ArrayList<Integer>> adj) {
        // code here
        boolean[] vis=new boolean[v];
        boolean[] currvis=new boolean[v];
        for(int i=0;i<v;i++){
            if(!vis[i]){
                if(dfs(i,vis,currvis,adj)){
                    return true;
                }
            }
        }
        return false;
    }    
        public boolean dfs(int node,boolean[] vis,boolean[] currvis,ArrayList<ArrayList<Integer>> adj){
            vis[node]=true;
            currvis[node]=true;
            for(int i:adj.get(node)){
                if(currvis[i]){
                    return true;
                }
                else if(!vis[i]){
                    if(dfs(i,vis,currvis,adj)){
                        return true;
                    }
                }
            }
            
            currvis[node]=false;
            return false;
        }
        
    
}
