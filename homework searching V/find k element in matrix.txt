class Solution
{
	public static int kthSmallest(int[][]mat,int n,int k)
	{
        //code here.
        int low=mat[0][0];
        int high=mat[n-1][n-1];
      

	while (low <= high) {
	int mid = low + (high - low) / 2;
	int helper = helper(mid, mat);

	if (helper >= k)
		high = mid - 1;
	else
		low = mid + 1;
	}
	return low;
}

public static int helper(int mid, int arr[][]) 
{
	int ans = 0;
	int n=arr.length;

	for (int i = 0; i < n; i++)
	{
	

	if (arr[i][0] > mid) {
		return ans;
	}
	

	if (arr[i][n - 1] <= mid) {
		ans += n;
		continue;
	}

	int temp = 0;
	for (int j = n / 2; j >= 1; j /= 2) {
		while (temp+j < n && arr[i][temp + j]<= mid) {
		temp += j;
		}
	}

	ans += temp + 1;
	}
	return ans;
    }
}