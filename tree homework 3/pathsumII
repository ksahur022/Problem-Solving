class Solution {
    
    int currSum = 0;
    Stack<Integer> stack = new Stack();
    List<List<Integer>> result = new ArrayList();
    
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if(root == null) return result;
        myPathSum(root, targetSum);
        return result;
    }
    
    private void myPathSum(TreeNode root, int targetSum) {
        if(root.left == null && root.right == null) {
            stack.push(root.val);
            currSum += root.val;
            if(currSum == targetSum) {
                List<Integer> list = new ArrayList(stack);
                result.add(list);
            } 
            return;
        }
        currSum += root.val;
        stack.push(root.val);
        if(root.left != null) {
            myPathSum(root.left, targetSum);
            currSum -= stack.pop();
        }     
        if(root.right != null) {
           myPathSum(root.right, targetSum);  
            currSum -= stack.pop(); 
        }
    }
}
